import { useState } from "react";
import Link from "next/link";
import router from "next/navigation"

const cities = [{City:"–ò–∂–µ–≤—Å–∫", keyCity:"Izhevsk"},  {City:"–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", keyCity:"Krasnodar"}]; // –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤

const SearchPage = () => {
    const [searchTerm, setSearchTerm] = useState(""); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    const [selectedCity, setSelectedCity] = useState("Izhevsk"); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    const [focusType, setFocusType] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞

    const handleChange = (e) => {
        setSearchTerm(e.target.value);
    };

    const handleCityChange = (e) => {
        setSelectedCity(e.target.value);
    };

    const handleMouseOver = () => {

        setFocusType(true);

    };

    const handleMouseOut = () => {

        setFocusType(false);
    };

    const handleSearch = () => {
        // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞
        // –ù–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é —Ä–æ—É—Ç–∏–Ω–≥–∞ –∏–∑ –ø–∞–∫–µ—Ç–∞ next/router
         //Link href=(`/DataProducts?term=${searchTerm}&city=${selectedCity}`);


    };

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
    const filteredProducts = ["–ê–ª–º–∞–≥", "–ö–∏—Å–ª–æ—Ä–æ–¥–Ω—ã–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç–æ—Ä", "–ö—Ä–æ–≤–∞—Ç—å","–ö–æ—Å—Ç—ã–ª–∏","–•–æ–¥—É–Ω–∫–∏","–¢—Ä–æ—Å—Ç–∏",
        "–í–µ—Å—ã –¥–µ—Ç—Å–∫–∏–µ","–§–æ—Ç–æ–ª–∞–º–ø–∞ –¥–ª—è –ª–µ—á–µ–Ω–∏—è –∂–µ–ª—Ç—É—Ö–∏ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö","–û—Ä—Ç–µ–∑","–ù–æ—Å–∏–ª–∫–∏"].filter((product) =>
        product.toLowerCase().includes(searchTerm.slice(0,3).toLowerCase() )
    );


    return (
        <div className="">
        <div className="flex justify-center items-center flex-wrap w-full">
            <input
                type="text"
                value={searchTerm}
                onChange={handleChange}
                placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞"
                className="m-2 p-2 border border-gray-300 rounded"

                onFocus={handleMouseOver} onBlur={handleMouseOut}
            />

            {/*
            <select
                value={selectedCity}
                onChange={handleCityChange}
                className="m-2 p-2 border border-gray-300 rounded "
            >

                {cities.map((c) => (
                    <option key={c.keyCity} value={c.keyCity}>
                        {c.City}
                    </option>
                ))}
            </select>
            */}

            <button className="bg-blue-200 hover:bg-blue-300 text-white font-bold py-2 px-4 rounded ">
                <Link
                    href={{
                        pathname: '/dataProducts/[slug]/',
                        query: { find: searchTerm }
                    }}
                    as={`dataProducts/${selectedCity}/?find=${searchTerm}`}
                >
                    üîçÔ∏é
                </Link>
            </button>
        </div>

        <div>
            {filteredProducts.length > 0 && searchTerm.length > 0  && (
                <ul className={"m-2 p-2 bg-blue-500 hover:bg-blue-600 text-white rounded" }>
                    {filteredProducts.slice(0,3).map((product) => (
                        <li
                            key={product}
                            className={"cursor-pointer font-bold py-2 pl-3 pr-4 "}
                            onClick={() => setSearchTerm(product)}
                        >
                            {product}
                        </li>
                    ))}
                </ul>
            )}


        </div>
        </div>


    );
};

export default SearchPage;